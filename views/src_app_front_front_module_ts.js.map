{"version":3,"sources":["./src/app/front.service.ts","./src/app/front/add-requirement/add-requirement.component.ts","./src/app/front/add-requirement/add-requirement.component.html","./src/app/front/f-add-medicine/f-add-medicine.component.ts","./src/app/front/f-add-medicine/f-add-medicine.component.html","./src/app/front/f-invoices/f-invoices.component.ts","./src/app/front/f-invoices/f-invoices.component.html","./src/app/front/f-medicine/f-medicine.component.html","./src/app/front/f-medicine/f-medicine.component.ts","./src/app/front/footer/footer.component.ts","./src/app/front/footer/footer.component.html","./src/app/front/front-routing.module.ts","./src/app/front/front.component.ts","./src/app/front/front.component.html","./src/app/front/front.module.ts","./src/app/front/header/header.component.ts","./src/app/front/header/header.component.html","./src/app/front/sales/sales.component.ts","./src/app/front/sales/sales.component.html"],"names":[],"mappings":"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","file":"src_app_front_front_module_ts.js","sourcesContent":["import { AuthService } from './auth.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FrontService {\n  constructor(private http: HttpClient, private auth: AuthService) {}\n  private APIURL = 'http://localhost:3030/api/user';\n  private APISERVER = 'https://enigmatic-hamlet-45263.herokuapp.com/api/user';\n\n  private headers = {\n    headers: new HttpHeaders().set(\n      'authorization',\n      `${this.auth.getJwtToken()}`\n    ),\n  };\n  getInvoices() {\n    return this.http.get(`${this.APIURL}/invoices`, this.headers);\n  }\n  getMedicines() {\n    return this.http.get(`${this.APIURL}/get-medicines`, this.headers);\n  }\n  getMedicinesForSales() {\n    return this.http.get(`${this.APIURL}/sales`, this.headers);\n  }\n  getMedicinesById(id: string) {\n    return this.http.get(`${this.APIURL}/get-medicine/${id}`, this.headers);\n  }\n  getInvoiceById(id: string) {\n    return this.http.get(`${this.APIURL}/get-invoice/${id}`, this.headers);\n  }\n  madeSale(data: any) {\n    return this.http.post(`${this.APIURL}/made-sale/`, data, this.headers);\n  }\n  addMedicine(data: any) {\n    return this.http.post(`${this.APIURL}/add-medicine/`, data, this.headers);\n  }\n  updateMedicine(data: any) {\n    return this.http.post(\n      `${this.APIURL}/update-medicine/`,\n      data,\n      this.headers\n    );\n  }\n  deleteRequirement() {\n    return this.http.get(`${this.APIURL}/delete-requirement/`, this.headers);\n  }\n  generateRequirement() {\n    return this.http.get(`${this.APIURL}/get-requirement/`, this.headers);\n  }\n  addRequirement(data: any) {\n    return this.http.post(\n      `${this.APIURL}/add-requirement/`,\n      data,\n      this.headers\n    );\n  }\n}\n","import { FrontService } from './../../front.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-add-requirement',\n  templateUrl: './add-requirement.component.html',\n  styleUrls: ['./add-requirement.component.css']\n})\nexport class AddRequirementComponent implements OnInit {\n\n  constructor(private frontSerice: FrontService,\n    private toastr: ToastrService,\n    private route: Router,\n    private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n  }\n  requirement : any = [];\n  closeResult: string = \"\";\n\n  requirementValue = new FormGroup({\n    name : new FormControl('', [Validators.required]),\n    quantity: new FormControl('', [Validators.required,Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')])\n  });\n\n  get f3(){\n    return this.requirementValue.controls;\n  }\n  medicineTitle : string = \"Manage Requirements\"\n  generateRequirement(content : any){\n    this.frontSerice.generateRequirement().subscribe((data:any)=>{\n      this.requirement = data.data\n      this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n        this.closeResult = `Closed with: ${result}`;\n      }, (reason :any) => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      });\n      this.route.navigate(['/requirements']);\n      this.toastr.success('Requirement generated successfully','Success',{timeOut:2000});\n    }, (err)=>{\n      this.toastr.error(err.name,'Error',{timeOut:3000});\n      this.route.navigate(['/requirements']);\n    });\n  }\n  deleteRequirement(){\n    this.frontSerice.deleteRequirement().subscribe((data)=>{\n      this.toastr.success('Requirement deleted Successfully','Success',{timeOut:2000});\n      this.route.navigate(['/requirements']);\n    }, (err)=>{\n      this.toastr.error(err.name,'Error',{timeOut:3000});\n      this.route.navigate(['/requirements']);\n    });\n  }\n  onRequirementSubmit(){\n    this.frontSerice.addRequirement(this.requirementValue.value).subscribe((data)=>{\n      this.toastr.success('Requirement added Successfully','Success',{timeOut:2000});\n      this.requirementValue.reset();\n    }, (err)=>{\n      this.toastr.error(err.name,'Error',{timeOut:3000});\n      this.route.navigate(['/sales']);\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n}\n","<!-- Content Header (Page header) -->\n<div class=\"content-header\">\n  <div class=\"container-fluid\">\n    <div class=\"row mb-2\">\n      <div class=\"col-sm-6\">\n        <h1 class=\"m-0 text-dark\">{{ medicineTitle }}</h1>\n      </div>\n      <!-- /.col -->\n      <div class=\"col-sm-6\">\n        <ol class=\"breadcrumb float-sm-right\">\n          <li class=\"breadcrumb-item\"><a routerLink=\"/sales\">Home</a></li>\n          <li class=\"breadcrumb-item active\">{{ medicineTitle }}</li>\n        </ol>\n      </div>\n      <!-- /.col -->\n    </div>\n    <!-- /.row -->\n  </div>\n  <!-- /.container-fluid -->\n</div>\n<div class=\"container-fluid\">\n  <form [formGroup]=\"requirementValue\" (ngSubmit)=\"onRequirementSubmit()\">\n    <div class=\"row\">\n      <div class=\"col-sm-6 form-group\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"name\"\n          required\n          formControlName=\"name\"\n          name=\"name\"\n          aria-describedby=\"name\"\n          placeholder=\"Enter Carpet Name\"\n        />\n        <div\n          *ngIf=\"f3.name.touched && f3.name.invalid\"\n          class=\"text-danger\"\n          role=\"alert\"\n        >\n          <div *ngIf=\"f3.name.errors\">\n            <div *ngIf=\"f3.name.errors.required\">Name is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-6 form-group\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"quantity\"\n          required\n          formControlName=\"quantity\"\n          name=\"quantity\"\n          aria-describedby=\"quantity\"\n          placeholder=\"Enter required Quantity\"\n        />\n        <div\n          *ngIf=\"f3.quantity.touched && f3.quantity.invalid\"\n          class=\"text-danger\"\n          role=\"alert\"\n        >\n          <div *ngIf=\"f3.quantity.errors\">\n            <div *ngIf=\"f3.quantity.errors.required\">Quantity is required</div>\n            <div *ngIf=\"f3.quantity.errors.pattern\">\n              Quantity must be a Number\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group col-sm-12\">\n      <div class=\"row\">\n        <div class=\"col-sm-1\">\n          <button\n            type=\"submit\"\n            [disabled]=\"!requirementValue.valid\"\n            class=\"btn btn-primary\"\n          >\n            Submit\n          </button>\n        </div>\n        <div class=\"col-sm-2\">\n          <button\n            type=\"button\"\n            (click)=\"generateRequirement(requirementModel)\"\n            class=\"btn btn-success\"\n          >\n            Get Requirement\n          </button>\n        </div>\n        <div class=\"col-sm-2\">\n          <button\n            type=\"button\"\n            (click)=\"deleteRequirement()\"\n            class=\"btn btn-danger\"\n          >\n            Delete Requirement\n          </button>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n<ng-template #requirementModel let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Required Carpets</h4>\n    <button\n      type=\"button\"\n      class=\"close\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss('Cross click')\"\n    >\n      <span aria-hidden=\"true\">×</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <table class=\"body-wrap\" id=\"requirement-print\">\n      <tbody>\n        <tr>\n          <td class=\"container\" width=\"600\">\n            <div class=\"content\">\n              <table class=\"main\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n                <tbody>\n                  <tr>\n                    <td class=\"content-wrap aligncenter\">\n                      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n                        <tbody>\n                          <tr>\n                            <td class=\"content-block\">\n                              <table class=\"invoice\">\n                                <tbody>\n                                  <tr>\n                                    <td>\n                                      <table class=\"table\">\n                                        <thead class=\"thead-light text-center\">\n                                          <tr>\n                                            <th>Carpet</th>\n                                            <th>Quantity</th>\n                                          </tr>\n                                        </thead>\n                                        <tbody>\n                                          <tr\n                                            class=\"text-center\"\n                                            *ngFor=\"let invoice of requirement\"\n                                          >\n                                            <td>{{ invoice.name }}</td>\n                                            <td>{{ invoice.quantity }}</td>\n                                          </tr>\n                                        </tbody>\n                                      </table>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td class=\"content-block\">Carpet Inc.</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              <div class=\"footer\">\n                <table width=\"100% \">\n                  <tbody>\n                    <tr>\n                      <td class=\"aligncenter content-block\">\n                        Questions? Email\n                        <a href=\"mailto: \">support@company.inc</a>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </td>\n          <td></td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button \"\n      class=\"btn btn-outline-dark\"\n      printSectionId=\"requirement-print\"\n      [useExistingCss]=\"true\"\n      ngxPrint\n    >\n      Print\n    </button>\n  </div>\n</ng-template>\n","import { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { FrontService } from './../../front.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-f-add-medicine',\n  templateUrl: './f-add-medicine.component.html',\n  styleUrls: ['./f-add-medicine.component.css'],\n})\nexport class FAddMedicineComponent implements OnInit {\n  type: any;\n  typeItem: any;\n  constructor(\n    private frontService: FrontService,\n    private toastr: ToastrService,\n    private route: Router,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  medicineData = new FormGroup({\n    medicineName: new FormControl('', [Validators.required]),\n    sellingPrice: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[0-9]+(.[0-9][0-9]?)?'),\n    ]),\n    mrp: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[0-9]+(.[0-9][0-9]?)?'),\n    ]),\n    medicineCompany: new FormControl('', [Validators.required]),\n    totalStip: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[0-9]+(.[0-9][0-9]?)?'),\n    ]),\n    medicineInStip: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[0-9]+(.[0-9][0-9]?)?'),\n    ]),\n    type: new FormControl('', [Validators.required]),\n  });\n\n  medicine: any = {};\n  isAddMode: boolean = true;\n  medicineValues: any;\n  id: string = '';\n  stock: number = 0;\n  dropdowntypeSetting: any = {\n    singleSelection: true,\n    idField: 'value',\n    textField: 'name',\n    itemsShowLimit: 10,\n    allowSearchFilter: false,\n  };\n\n  isTypeList: any[] = [\n    { id: 1, name: 'In meter', value: 'meter' },\n    { id: 2, name: 'In stip', value: 'stip' },\n  ];\n\n  medicineTitle: string = 'Add Carpets';\n  ngOnInit(): void {\n    const id = this.activatedRoute.snapshot.params['id'];\n    this.getMedicine(id);\n  }\n\n  get f() {\n    return this.medicineData.controls;\n  }\n\n  isTypeListSelect(item: any) {\n    this.typeItem = item;\n  }\n\n  getMedicine(id: string) {\n    if (id) {\n      this.medicineTitle = 'Edit Carpets';\n      this.frontService.getMedicinesById(id).subscribe(\n        (data: any) => {\n          this.medicine = data.data;\n          this.stock = this.medicine.totalStip;\n          this.isAddMode = false;\n          this.id = id;\n          this.type = data.type;\n        },\n        (err) => {\n          this.toastr.error(err.name, 'Error', { timeOut: 3000 });\n        }\n      );\n    } else {\n      this.medicine = {\n        mrp: null,\n        sellingPrice: null,\n        medicineCompany: null,\n        medicineName: null,\n        totalStip: null,\n        medicineInStip: null,\n        type: null,\n      };\n    }\n  }\n  onSubmit(): void {\n    if (!this.isAddMode) {\n      this.medicineValues = this.medicineData.value;\n      const stock = this.stock + parseInt(this.medicineData.value.totalStip);\n      this.medicineValues._id = this.id;\n      this.medicineValues.totalStip = this.typeItem.value === 'meter' ? 1 : stock;\n      this.medicineValues.type = this.typeItem.value;\n      this.frontService.updateMedicine(this.medicineValues).subscribe(\n        (data) => {\n          this.toastr.success('Carpets Updated Successfully', 'Success', {\n            timeOut: 2000,\n          });\n          this.medicineData.reset();\n        },\n        (err) => {\n          this.toastr.error(err.name, 'Error', { timeOut: 3000 });\n          this.medicineData.reset();\n        }\n      );\n    } else {\n      const addData = {\n        medicineCompany: this.medicineData.value.medicineCompany,\n        medicineInStip: this.medicineData.value.medicineInStip,\n        medicineName: this.medicineData.value.medicineName,\n        mrp: this.medicineData.value.mrp,\n        sellingPrice: this.medicineData.value.sellingPrice,\n        totalStip: this.medicineData.value.totalStip,\n        type: this.typeItem.value,\n      };\n\n      if (this.typeItem.value === 'meter') {\n        addData.medicineInStip = 1;\n      } else {\n        addData.medicineInStip = this.medicineData.value.medicineInStip;\n      }\n\n      this.frontService.addMedicine(addData).subscribe(\n        (data) => {\n          this.toastr.success('Carpets added Successfully', 'Success', {\n            timeOut: 2000,\n          });\n          this.medicineData.reset();\n        },\n        (err) => {\n          this.toastr.error(err.name, 'Error', { timeOut: 3000 });\n          this.medicineData.reset();\n        }\n      );\n    }\n  }\n}\n","<!-- Content Header (Page header) -->\n<div class=\"content-header\">\n  <div class=\"container-fluid\">\n    <div class=\"row mb-2\">\n      <div class=\"col-sm-6\">\n        <h1 class=\"m-0 text-dark\">{{ medicineTitle }}</h1>\n      </div>\n      <!-- /.col -->\n      <div class=\"col-sm-6\">\n        <ol class=\"breadcrumb float-sm-right\">\n          <li class=\"breadcrumb-item\"><a routerLink=\"/sales\">Home</a></li>\n          <li class=\"breadcrumb-item active\">{{ medicineTitle }}</li>\n        </ol>\n      </div>\n      <!-- /.col -->\n    </div>\n    <!-- /.row -->\n  </div>\n  <!-- /.container-fluid -->\n</div>\n<div class=\"container-fluid\">\n  <form [formGroup]=\"medicineData\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"row\">\n      <div class=\"col-sm-6 form-group\">\n        <label for=\"medicineName\">Carpet name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"medicineName\"\n          required\n          [(ngModel)]=\"medicine.medicineName\"\n          formControlName=\"medicineName\"\n          name=\"medicineName\"\n          aria-describedby=\"medicineName\"\n          placeholder=\"Enter Carpet Name\"\n        />\n        <div\n          *ngIf=\"f.medicineName.touched && f.medicineName.invalid\"\n          class=\"text-danger\"\n          role=\"alert\"\n        >\n          <div *ngIf=\"f.medicineName.errors\">\n            <div *ngIf=\"f.medicineName.errors.required\">\n              Carpet name is required.\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-6 form-group\">\n        <label for=\"medicineCompany\">Carpet Company Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"medicineCompany\"\n          [(ngModel)]=\"medicine.medicineCompany\"\n          formControlName=\"medicineCompany\"\n          name=\"medicineCompany\"\n          id=\"agentUsername\"\n          aria-describedby=\"agentUsername\"\n          placeholder=\"Enter Carpet Company Name\"\n        />\n        <div\n          *ngIf=\"f.medicineCompany.touched && f.medicineCompany.invalid\"\n          class=\"text-danger\"\n          role=\"alert\"\n        >\n          <div *ngIf=\"f.medicineCompany.errors\">\n            <div *ngIf=\"f.medicineCompany.errors.required\">\n              Carpet Company name is required.\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-6 form-group\">\n        <label for=\"mrp\">Maximum Retail Price (MRP) </label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"mrp\"\n          aria-describedby=\"mrp\"\n          [(ngModel)]=\"medicine.mrp\"\n          formControlName=\"mrp\"\n          name=\"mrp\"\n          placeholder=\"Enter Carpet MRP\"\n        />\n        <div\n          *ngIf=\"f.mrp.touched && f.mrp.invalid\"\n          class=\"text-danger\"\n          role=\"alert\"\n        >\n          <div *ngIf=\"f.mrp.errors\">\n            <div *ngIf=\"f.mrp.errors.required\">Carpet MRP is required.</div>\n            <div *ngIf=\"f.mrp.errors.pattern\">Please Enter valid MRP.</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-6 form-group\">\n        <label for=\"sellingPrice\">Selling Price</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"sellingPrice\"\n          formControlName=\"sellingPrice\"\n          [(ngModel)]=\"medicine.sellingPrice\"\n          name=\"sellingPrice\"\n          aria-describedby=\"sellingPrice\"\n          placeholder=\"Enter Selling Price\"\n        />\n        <div\n          *ngIf=\"f.sellingPrice.touched && f.sellingPrice.invalid\"\n          class=\"text-danger\"\n          role=\"alert\"\n        >\n          <div *ngIf=\"f.sellingPrice.errors\">\n            <div *ngIf=\"f.sellingPrice.errors.required\">\n              Carpet Selling is required.\n            </div>\n            <div *ngIf=\"f.sellingPrice.errors.pattern\">\n              Please Enter valid selling Price.\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-6\">\n        <label for=\"type\">Type</label>\n        <ng-multiselect-dropdown\n          [placeholder]=\"'Select carpet type'\"\n          [settings]=\"dropdowntypeSetting\"\n          [data]=\"isTypeList\"\n          (onSelect)=\"isTypeListSelect($event)\"\n          id=\"type\"\n          formControlName=\"type\"\n          name=\"type\"\n        >\n        </ng-multiselect-dropdown>\n        <div\n          *ngIf=\"f.type.touched && f.type.invalid\"\n          class=\"text-danger\"\n          role=\"alert\"\n        >\n          <div *ngIf=\"f.type.errors\" class=\"text-danger\" role=\"alert\">\n            <div *ngIf=\"f.type.errors.required\">Payment is required.</div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-sm-6 form-group\">\n        <label for=\"manufacturingDate\">Total Carpet count in a Bundle or Meter </label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"medicineInStip\"\n          [(ngModel)]=\"medicine.medicineInStip\"\n          formControlName=\"medicineInStip\"\n          name=\"medicineInStip\"\n          aria-describedby=\"medicineInStip\"\n          placeholder=\"Enter Carpet in a Stip\"\n        />\n        <div\n          *ngIf=\"f.medicineInStip.touched && f.medicineInStip.invalid\"\n          class=\"text-danger\"\n          role=\"alert\"\n        >\n          <div *ngIf=\"f.medicineInStip.errors\">\n            <div *ngIf=\"f.medicineInStip.errors.required\">\n              Carpet count in a bundle is required. \n            </div>\n            <div *ngIf=\"f.medicineInStip.errors.pattern\">\n              Please Enter valid Carpet count in bundle.\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-6 form-group\">\n        <label for=\"expiryDate\">Total Carpet Bundle Count</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"totalStip\"\n          formControlName=\"totalStip\"\n          [(ngModel)]=\"medicine.totalStip\"\n          name=\"totalStip\"\n          aria-describedby=\"totalStip\"\n          placeholder=\"Enter Total stips\"\n        />\n        <div\n          *ngIf=\"f.totalStip.touched && f.totalStip.invalid\"\n          class=\"text-danger\"\n          role=\"alert\"\n        >\n          <div *ngIf=\"f.totalStip.errors\">\n            <div *ngIf=\"f.totalStip.errors.required\">\n              Carpet total bundle count is required.\n            </div>\n            <div *ngIf=\"f.totalStip.errors.pattern\">\n              Please Enter valid Carpet bundle count.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <button\n        type=\"submit\"\n        [disabled]=\"!medicineData.valid\"\n        class=\"btn btn-primary\"\n      >\n        Submit\n      </button>\n    </div>\n  </form>\n</div>\n","import { FrontService } from './../../front.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-f-invoices',\n  templateUrl: './f-invoices.component.html',\n  styleUrls: ['./f-invoices.component.css']\n})\nexport class FInvoicesComponent implements OnInit {\n\n  constructor(private frontService: FrontService,\n              private toastr: ToastrService,\n              private modalService: NgbModal) {}\n\n  invoices:any =[];\n  closeResult: string = \"\";\n  printInvoiceData :any = {};\n  ngOnInit(): void {\n    this.frontService.getInvoices().subscribe((data : any)=>{\n        this.invoices = data.data;\n        setTimeout(()=>{\n          $('#invoiceTable').DataTable();\n        },100)\n      },(err)=>{\n        this.toastr.error(err.error.msg,'Error',{timeOut:3000})\n    })\n  }\n\n  showPrintInvoice(id:string, content : any){\n    this.frontService.getInvoiceById(id).subscribe((data : any)=>{\n      this.printInvoiceData = data.data;\n      this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n        this.closeResult = `Closed with: ${result}`;\n      }, (reason :any) => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      });\n    }, (err)=>{\n\n    })\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n}\n","<!-- Content Header (Page header) -->\n<div class=\"content-header\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <h1 class=\"m-0 text-dark\">Bills Listing</h1>\n      </div>\n      <!-- /.col -->\n      <div class=\"col-sm-6\">\n        <ol class=\"breadcrumb float-sm-right\">\n          <li class=\"breadcrumb-item\"><a routerLink=\"/sales\">Home</a></li>\n          <li class=\"breadcrumb-item active\">Bills Listing</li>\n        </ol>\n      </div>\n      <!-- /.col -->\n    </div>\n    <!-- /.row -->\n  </div>\n  <!-- /.container-fluid -->\n</div>\n<div class=\"container\">\n  <table id=\"invoiceTable\" class=\"table\">\n    <thead class=\"thead-dark text-center\">\n      <tr>\n        <th>ID</th>\n        <th>Customer name</th>\n        <th>Price</th>\n        <th>Transport Name</th>\n        <th>Transport Details</th>\n        <th>Date</th>\n        <th>print</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"text-center\" *ngFor=\"let invoice of invoices\">\n        <td>{{ invoice._id }}</td>\n        <td>{{ invoice.customerName }}</td>\n        <td>{{ invoice.totalPrice }}</td>\n        <td>{{ invoice.transportName }}</td>\n        <td>{{ invoice.transportDetails }}</td>\n        <td>{{ invoice.date | date: \"d-MMM-y\" }}</td>\n        <td>\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-sm\"\n            (click)=\"showPrintInvoice(invoice._id, mymodal)\"\n          >\n            Print\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<ng-template #mymodal let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Bill</h4>\n    <button\n      type=\"button\"\n      class=\"close\"\n      aria-label=\"Close\"\n      (click)=\"modal.dismiss('Cross click')\"\n    >\n      <span aria-hidden=\"true\">×</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <table class=\"body-wrap\" id=\"table-print\">\n      <tbody>\n        <tr>\n          <td class=\"container\" width=\"600\">\n            <div class=\"content\">\n              <table class=\"main\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n                <tbody>\n                  <tr>\n                    <td class=\"content-wrap aligncenter\">\n                      <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n                        <tbody>\n                          <tr>\n                            <td class=\"content-block\">\n                              <h2>Thanks for purchaging</h2>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td class=\"content-block\">\n                              <table class=\"invoice\">\n                                <tbody>\n                                  <tr>\n                                    <td>\n                                      Bills #{{ printInvoiceData._id\n                                      }}<br />Customer Name:-\n                                      {{ printInvoiceData.customerName\n                                      }}<br />Shop Name:-\n                                      {{ printInvoiceData.doctorName\n                                      }}<br />Date:-\n                                      {{\n                                        printInvoiceData.date | date: \"d-MMM-y\"\n                                      }}\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>\n                                      <table class=\"table\">\n                                        <thead class=\"thead-light text-left\">\n                                          <tr>\n                                            <th>Item</th>\n                                            <th>Quantity</th>\n                                            <th>MRP</th>\n                                            <th>Discount</th>\n                                            <th>Price</th>\n                                          </tr>\n                                        </thead>\n                                        <tbody>\n                                          <tr\n                                            class=\"text-center\"\n                                            *ngFor=\"\n                                              let invoice of printInvoiceData.medicines\n                                            \"\n                                          >\n                                            <td>{{ invoice.medicineName }}</td>\n                                            <td>{{ invoice.quantity }}</td>\n                                            <td>{{ invoice.mrp }}</td>\n                                            <td>{{ invoice.priceDiscount }}</td>\n                                            <td>{{ invoice.price }}</td>\n                                          </tr>\n                                          <tr class=\"total\">\n                                            <td\n                                              colspan=\"4\"\n                                              style=\"text-align: right\"\n                                            >\n                                              <b>Total</b>\n                                            </td>\n                                            <td class=\"text-center\">\n                                              ₹\n                                              {{ printInvoiceData.totalPrice }}\n                                            </td>\n                                          </tr>\n                                        </tbody>\n                                      </table>\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td class=\"content-block\">Narayan Enterprise</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              <div class=\"footer\">\n                <table width=\"100% \">\n                  <tbody>\n                    <tr>\n                      <td class=\"aligncenter content-block\">\n                        Questions? Email\n                        <a href=\"mailto: \">narayan@gmail.com</a>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </td>\n          <td></td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      type=\"button \"\n      class=\"btn btn-outline-dark\"\n      printSectionId=\"table-print\"\n      [useExistingCss]=\"true\"\n      ngxPrint\n    >\n      Print\n    </button>\n  </div>\n</ng-template>\n","<!-- Content Header (Page header) -->\n<div class=\"content-header\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <h1 class=\"m-0 text-dark\">Carpet Listing</h1>\n      </div>\n      <!-- /.col -->\n      <div class=\"col-sm-6\">\n        <ol class=\"breadcrumb float-sm-right\">\n          <li class=\"breadcrumb-item\"><a routerLink=\"/sales\">Home</a></li>\n          <li class=\"breadcrumb-item active\">Carpet Listing</li>\n        </ol>\n      </div>\n      <!-- /.col -->\n    </div>\n    <!-- /.row -->\n  </div>\n  <!-- /.container-fluid -->\n</div>\n<div class=\"container\">\n  <table id=\"medicineTable\" class=\"table\">\n    <thead class=\"thead-dark text-center\">\n      <tr>\n        <th>Carpet name</th>\n        <th>Carpet Price</th>\n        <th>Carpet Stock in stips</th>\n        <th>Total Tablet Stock</th>\n        <th>Type</th>\n        <th>Edit</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr class=\"text-center\" *ngFor=\"let medicine of medicine.data\">\n        <td>{{ medicine.medicineName }}</td>\n        <td>{{ medicine.mrp }}</td>\n        <td>{{ medicine.totalStip }}</td>\n        <td>{{ medicine.medicineInStip * medicine.totalStip }}</td>\n        <td>{{ medicine.type }}</td>\n        <td>\n          <button\n            type=\"button\"\n            class=\"btn btn-warning btn-sm\"\n            (click)=\"editMedicine(medicine._id)\"\n          >\n            Edit\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { FrontService } from './../../front.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-f-medicine',\n  templateUrl: './f-medicine.component.html',\n  styleUrls: ['./f-medicine.component.css']\n})\nexport class FMedicineComponent implements OnInit {\n\n  constructor(\n    private frontService: FrontService,\n    private toastr: ToastrService,\n    private router : Router)\n     { }\n\n  medicine: any = [];\n  ngOnInit(): void {\n    this.frontService.getMedicines().subscribe((data)=>{\n      this.medicine = data;\n      setTimeout(()=>{\n        $(\"#medicineTable\").DataTable();\n      },100)\n    },(err)=>{\n      this.toastr.error(err.name,'Error',{timeOut:3000})\n    })\n  }\n\n  editMedicine(id:string){\n    this.router.navigate([`/medicine/${id}`]);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css'],\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Footer -->\n<footer class=\"bg-light footer text-center text-lg-start\">\n  <!-- Copyright -->\n  <div class=\"text-center p-4\" style=\"background-color: rgba(0, 0, 0, 0.2)\">\n    © 2020 Copyright:\n    <a class=\"text-dark\" routerLink=\"/\">Narayan Enterprise</a>\n  </div>\n  <!-- Copyright -->\n</footer>\n<!-- Footer -->\n","import { FMedicineComponent } from './f-medicine/f-medicine.component';\nimport { FInvoicesComponent } from './f-invoices/f-invoices.component';\nimport { FAddMedicineComponent } from './f-add-medicine/f-add-medicine.component';\nimport { SalesComponent } from './sales/sales.component';\nimport { AuthGuard } from './../auth.guard';\nimport { FrontComponent } from './front.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddRequirementComponent } from './add-requirement/add-requirement.component'\n\nconst routes : Routes = [\n  {path:\"\", component:FrontComponent,children:[\n    {path:\"sales\", component:SalesComponent, canActivate:[AuthGuard]},\n    {path:\"invoices\", component:FInvoicesComponent, canActivate:[AuthGuard]},\n    {path:\"add-medicine\", component:FAddMedicineComponent, canActivate:[AuthGuard]},\n    {path:\"medicines\", component:FMedicineComponent, canActivate:[AuthGuard]},\n    {path:\"requirements\", component:AddRequirementComponent, canActivate:[AuthGuard]},\n    {path:\"medicine/:id\", component:FAddMedicineComponent, canActivate:[AuthGuard]}\n  ], canActivateChild:[AuthGuard]}\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\n\nexport class FrontRoutingModule { }\n","import { AuthService } from './../auth.service';\nimport { Router } from '@angular/router';\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-front',\n  templateUrl: './front.component.html',\n  styleUrls: ['./front.component.css']\n})\nexport class FrontComponent implements OnInit {\n\n  constructor(private router: Router, private auth : AuthService) {\n   }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"wrapper\">\n    <app-header></app-header>\n    <div class=\"content-wrapper\">\n        <router-outlet></router-outlet>\n    </div>\n    <app-footer></app-footer>\n</div>","import { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DataTablesModule } from 'angular-datatables';\nimport { FrontService } from './../front.service';\nimport { AuthService } from './../auth.service';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FrontRoutingModule } from './front-routing.module';\nimport { FooterComponent } from './footer/footer.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FrontComponent } from './front.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AuthGuard } from '../auth.guard';\nimport { SalesComponent } from './sales/sales.component';\nimport { FInvoicesComponent } from './f-invoices/f-invoices.component';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {NgxPrintModule} from 'ngx-print';\nimport { FAddMedicineComponent } from './f-add-medicine/f-add-medicine.component';\nimport { FMedicineComponent } from './f-medicine/f-medicine.component';\nimport { AddRequirementComponent } from './add-requirement/add-requirement.component';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    FooterComponent,\n    FrontComponent,\n    SalesComponent,\n    FInvoicesComponent,\n    FAddMedicineComponent,\n    FMedicineComponent,\n    AddRequirementComponent\n  ],\n  imports: [\n    CommonModule,\n    FrontRoutingModule,\n    DataTablesModule,\n    ReactiveFormsModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    ToastrModule.forRoot(),\n    NgbModule,\n    NgxPrintModule\n  ],\n  providers:[\n    AuthService,\n    AuthGuard,\n    FrontService\n  ]\n})\nexport class FrontModule { }\n","import { Router } from '@angular/router';\nimport { AuthService } from './../../auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  logout(){\n    if(this.auth.logout()){\n      this.router.navigate(['/'])\n    }\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" routerLink=\"/sales\">Carpet Sales</a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarColor01\"\n    aria-controls=\"navbarColor01\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarColor01\">\n    <ul class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/sales\">Sales</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/invoices\">Invoices</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/add-medicine\">Add Carpets</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/medicines\">Carpets</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/requirements\">Requirements</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" (click)=\"logout()\" style=\"cursor: pointer\">\n          <i class=\"nav-icon fas fa-sign-out-alt\"></i> logout</a\n        >\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FrontService } from './../../front.service';\nimport { Component, OnInit } from '@angular/core';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\n\n@Component({\n  selector: 'app-sales',\n  templateUrl: './sales.component.html',\n  styleUrls: ['./sales.component.css'],\n})\nexport class SalesComponent implements OnInit {\n  paidItem: any;\n  constructor(\n    private frontService: FrontService,\n    private toastr: ToastrService,\n    private router: Router\n  ) {}\n\n  get f() {\n    return this.medicineData.controls;\n  }\n  total: number = 0;\n  buttondisable: boolean = true;\n  dropdownList: any[] = [];\n  isPaidList: any[] = [\n    { id: 1, name: 'paid', value: true },\n    { id: 2, name: 'unpaid', value: false },\n  ];\n\n  dropdownPaidSetting = {\n    singleSelection: true,\n    idField: 'value',\n    textField: 'name',\n    itemsShowLimit: 10,\n    allowSearchFilter: false,\n  };\n\n  templist: any[] = [];\n  cartItems: any = [];\n  selectedItem: any = {};\n  dropdownSettings: IDropdownSettings = {};\n  item: any = {};\n  totalmed: number = 0;\n\n  medicineData = new FormGroup({\n    quantity: new FormControl('', [\n      Validators.required,\n      Validators.pattern('^[0-9]*$'),\n    ]),\n    medicineName: new FormControl('', [Validators.required]),\n    customerName: new FormControl('', [Validators.required]),\n    doctorName: new FormControl('', [Validators.required]),\n    transportName: new FormControl('', [Validators.required]),\n    transportDetails: new FormControl('', [Validators.required]),\n    isPaid: new FormControl('', [Validators.required]),\n  });\n\n  ngOnInit() {\n    this.prepareDropdown();\n  }\n\n  prepareDropdown() {\n    this.frontService.getMedicinesForSales().subscribe(\n      (values: any) => {\n        const { data } = values;\n        if (data) {\n          for (let i = 0; i < data.length; i++) {\n            this.templist.push({ id: data[i]._id, name: data[i].medicineName });\n            this.dropdownList = this.templist;\n          }\n        } else {\n          this.toastr.success('No Available Stock', 'Expired', {\n            timeOut: 3000,\n          });\n        }\n      },\n      (err) => {\n        this.toastr.error(err.name, 'Error', { timeOut: 3000 });\n      }\n    );\n    this.dropdownSettings = {\n      singleSelection: true,\n      idField: 'id',\n      textField: 'name',\n      itemsShowLimit: 10,\n      allowSearchFilter: true,\n    };\n  }\n\n  onItemSelect(item: any) {\n    this.selectedItem = item;\n  }\n\n  isPaidListSelect(item: any) {\n    this.paidItem = item;\n  }\n\n  onClick(quantity: string) {\n    let price = 0;\n    this.frontService.getMedicinesById(this.selectedItem.id).subscribe(\n      (res: any) => {\n        const { data } = res;\n        this.buttondisable = false;\n        const quan = parseInt(quantity);\n        this.totalmed = data.medicineInStip * data.totalStip;\n        console.log(data);\n\n        if (data.type === 'meter') {\n          if (quan > data.medicineInStip) {\n            alert(`Please try to add below ${data.medicineInStip} `);\n            return false;\n          }\n        } else {\n          if (quan > this.totalmed) {\n            alert(`Please try to add below ${this.totalmed} `);\n            return false;\n          }\n        }\n        if (data.type === 'stip') {\n          price = data.sellingPrice * quan;\n        } else {\n          price = data.sellingPrice * quan;\n        }\n        const mrpPrice = data.mrp  * quan;\n        const totalDiscount = mrpPrice - price;\n        const disTotal = totalDiscount.toFixed(2);\n        this.total += price;\n        const reaPrice = price.toFixed(2);\n        const catValue = {\n          _id: data._id,\n          medicineName: data.medicineName,\n          mrp: parseFloat(data.mrp),\n          priceDiscount: parseFloat(disTotal),\n          quantity: quan,\n          price: parseFloat(reaPrice),\n        };\n        this.cartItems.push(catValue);\n      },\n      (err) => {\n        this.toastr.error(err.name, 'Error', { timeOut: 2000 });\n      }\n    );\n  }\n\n  onSubmit() {\n    const sure = confirm('Are you sure want to sale ?');\n    if (sure) {\n      const customerName = this.medicineData.value.customerName;\n      const doctorName = this.medicineData.value.doctorName;\n      const transportName = this.medicineData.value.transportName;\n      const transportDetails = this.medicineData.value.transportDetails;\n      const isPaid = this.paidItem.value;\n      const total = this.total.toFixed(2);\n      const invoicesValues = {\n        customerName: customerName,\n        doctorName: doctorName,\n        transportName: transportName,\n        transportDetails: transportDetails,\n        isPaid: isPaid,\n        medicines: this.cartItems,\n        totalPrice: parseFloat(total),\n      };\n      this.frontService.madeSale(invoicesValues).subscribe(\n        (data: any) => {\n          this.toastr.success('Sale Made Sucessfully', 'Success', {\n            timeOut: 2000,\n          });\n          this.medicineData.reset();\n          this.cartItems = [];\n          this.buttondisable = true;\n          this.total = 0;\n          this.prepareDropdown();\n          this.medicineData.reset();\n        },\n        (err) => {\n          console.log(err);\n          this.toastr.error(err.name, 'Error', { timeOut: 2000 });\n        }\n      );\n    }\n  }\n\n  deleteMedicine(id: string) {\n    const temp = [];\n    if (this.cartItems.length > 0) {\n      for (let i = 0; i < this.cartItems.length; i++) {\n        console.log(this.cartItems[i]._id);\n        if (id !== this.cartItems[i]._id) {\n          temp.push(this.cartItems[i]);\n        } else {\n          this.total = this.total - this.cartItems[i].price;\n        }\n      }\n      this.cartItems = temp;\n    } else {\n      this.cartItems = [];\n      this.buttondisable = true;\n    }\n    if (this.cartItems.length == 0) {\n      this.buttondisable = true;\n    }\n  }\n}\n","<!-- Content Header (Page header) -->\n<div class=\"content-header\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <h1 class=\"m-0 text-dark\">Sales</h1>\n      </div>\n      <!-- /.col -->\n    </div>\n    <!-- /.row -->\n  </div>\n  <!-- /.container-fluid -->\n</div>\n<form class=\"form\" [formGroup]=\"medicineData\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <div class=\"row\">\n          <div class=\"col-sm-6\">\n            <label for=\"customerName\">Enter Customer Name</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"customerName\"\n              formControlName=\"customerName\"\n              name=\"customerName\"\n              placeholder=\"Enter Customer Name\"\n            />\n            <div\n              *ngIf=\"f.customerName.touched && f.customerName.invalid\"\n              class=\"text-danger\"\n              role=\"alert\"\n            >\n              <div\n                *ngIf=\"f.customerName.errors\"\n                class=\"text-danger\"\n                role=\"alert\"\n              >\n                <div *ngIf=\"f.customerName.errors.required\">\n                  Customer name is required.\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-sm-6\">\n            <label for=\"doctorName\">Enter shop Name</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"doctorName\"\n              formControlName=\"doctorName\"\n              name=\"doctorName\"\n              placeholder=\"Enter shop Name\"\n            />\n            <div\n              *ngIf=\"f.doctorName.touched && f.doctorName.invalid\"\n              class=\"text-danger\"\n              role=\"alert\"\n            >\n              <div *ngIf=\"f.doctorName.errors\" class=\"text-danger\" role=\"alert\">\n                <div *ngIf=\"f.doctorName.errors.required\">\n                  shop name is required.\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-sm-6\">\n            <label for=\"transportName\">Enter Transport Name</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"transportName\"\n              formControlName=\"transportName\"\n              name=\"transportName\"\n              placeholder=\"Enter Transport Name\"\n            />\n            <div\n              *ngIf=\"f.transportName.touched && f.transportName.invalid\"\n              class=\"text-danger\"\n              role=\"alert\"\n            >\n              <div\n                *ngIf=\"f.transportName.errors\"\n                class=\"text-danger\"\n                role=\"alert\"\n              >\n                <div *ngIf=\"f.transportName.errors.required\">\n                  Transport name is required.\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-sm-6\">\n            <label for=\"transportDetails\">Enter Transport Details</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"transportDetails\"\n              formControlName=\"transportDetails\"\n              name=\"transportDetails\"\n              placeholder=\"Enter transport Details\"\n            />\n            <div\n              *ngIf=\"f.transportDetails.touched && f.transportDetails.invalid\"\n              class=\"text-danger\"\n              role=\"alert\"\n            >\n              <div\n                *ngIf=\"f.transportDetails.errors\"\n                class=\"text-danger\"\n                role=\"alert\"\n              >\n                <div *ngIf=\"f.transportDetails.errors.required\">\n                  Transport Details is required\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-sm-6\">\n            <label for=\"isPaid\">Amount paid/unpaid</label>\n            <ng-multiselect-dropdown\n              [placeholder]=\"'Select Payment'\"\n              [settings]=\"dropdownPaidSetting\"\n              [data]=\"isPaidList\"\n              (onSelect)=\"isPaidListSelect($event)\"\n              id=\"isPaid\"\n              formControlName=\"isPaid\"\n              name=\"isPaid\"\n            >\n            </ng-multiselect-dropdown>\n            <div\n              *ngIf=\"f.isPaid.touched && f.isPaid.invalid\"\n              class=\"text-danger\"\n              role=\"alert\"\n            >\n              <div *ngIf=\"f.isPaid.errors\" class=\"text-danger\" role=\"alert\">\n                <div *ngIf=\"f.isPaid.errors.required\">Payment is required.</div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-sm-6\">\n            <label for=\"AgentName\">Select Carpet</label>\n            <ng-multiselect-dropdown\n              [placeholder]=\"'Select Carpet'\"\n              [settings]=\"dropdownSettings\"\n              [data]=\"dropdownList\"\n              (onSelect)=\"onItemSelect($event)\"\n              id=\"medicineName\"\n              formControlName=\"medicineName\"\n              name=\"medicineName\"\n            >\n            </ng-multiselect-dropdown>\n            <div\n              *ngIf=\"f.medicineName.touched && f.medicineName.invalid\"\n              class=\"text-danger\"\n              role=\"alert\"\n            >\n              <div\n                *ngIf=\"f.medicineName.errors\"\n                class=\"text-danger\"\n                role=\"alert\"\n              >\n                <div *ngIf=\"f.medicineName.errors.required\">\n                  Carpet name is required.\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-sm-4 form-group\">\n            <label for=\"quantity\">Enter Tablet Quantity </label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"quantity\"\n              formControlName=\"quantity\"\n              name=\"quantity\"\n              #quantity\n              placeholder=\"Enter carpet Quantity\"\n            />\n            <div\n              *ngIf=\"f.quantity.touched && f.quantity.invalid\"\n              class=\"text-danger\"\n              role=\"alert\"\n            >\n              <div *ngIf=\"f.quantity.errors\" class=\"text-danger\" role=\"alert\">\n                <div *ngIf=\"f.quantity.errors.required\">\n                  Quatity is required.\n                </div>\n                <div *ngIf=\"f.quantity.errors.pattern\">\n                  Please Enter valid Quantity\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group mt-2 pt-4\">\n            <button\n              type=\"button\"\n              class=\"btn btn-primary\"\n              [disabled]=\"f.quantity.invalid || f.medicineName.invalid\"\n              (click)=\"onClick(quantity.value)\"\n            >\n              Add\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Cart -->\n      <div class=\"col-lg-12 col-md-12 col-sm-12\">\n        <div class=\"col-lg-12 col-sm-12 mb-2\">\n          <span class=\"title font-weight-bold\">SALES CART</span>\n        </div>\n        <div class=\"col-lg-12 col-sm-12 hero-feature\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-bordered tbl-cart\">\n              <thead>\n                <tr>\n                  <td>Remove</td>\n                  <td>Product Name</td>\n                  <td class=\"td-qty\">Quantity</td>\n                  <td>Price(MRP) for 1 carpet</td>\n                  <td>Discount</td>\n                  <td>Total price</td>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let item of cartItems\">\n                  <td class=\"text-center\">\n                    <button\n                      (click)=\"deleteMedicine(item._id)\"\n                      class=\"remove_cart\"\n                      rel=\"1\"\n                    >\n                      <i class=\"fa fa-trash\"></i>\n                    </button>\n                  </td>\n                  <td>{{ item.medicineName }}</td>\n                  <td>{{ item.quantity }}</td>\n                  <td>₹ {{ item.mrp }}</td>\n                  <td class=\"price\">₹ {{ item.priceDiscount }}</td>\n                  <td>₹ {{ item.price }}</td>\n                </tr>\n\n                <tr>\n                  <td colspan=\"5 \" style=\"text-align: right\">Total</td>\n                  <td class=\"total\" colspan=\"1 \">\n                    <b>₹ {{ total | number: \"1.2-2\" }}</b>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div class=\"btn-group btns-cart text-right pb-4 float-right\">\n            <button\n              type=\"button\"\n              (click)=\"onSubmit()\"\n              ng-click=\"alert('Hello World!')\"\n              [disabled]=\"\n                f.doctorName.invalid || f.customerName.invalid || buttondisable\n              \"\n              class=\"btn btn-success\"\n            >\n              Sale <i class=\"fa fa-arrow-circle-right\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- End Cart -->\n    </div>\n  </div>\n</form>\n"],"sourceRoot":"webpack:///"}